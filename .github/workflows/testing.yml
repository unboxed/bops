---
name: Testing

on:
  workflow_call:
    inputs:
      exclude:
        type: string
        required: false
        default: ""
      include:
        type: string
        required: false
        default: "spec/**/*_spec.rb"
      name:
        type: string
        required: true
      test-runner:
        type: string
        default: rspec
      want-pdf:
        type: boolean
        required: false
        default: false
      dockerfile:
        type: string
        required: false
        default: Dockerfile
      context:
        type: string
        required: false
        default: "."
      additional_spec_opts:
        type: string
        required: false
        default: ""
      total-shards:
        type: number
        required: false
        default: 1
      shard:
        type: number
        required: false
        default: 1

jobs:
  tests:
    name: ${{ inputs.name }}
    runs-on: ubuntu-24.04
    env:
      PUPPETEER_SKIP_DOWNLOAD: true

    services:
      postgres:
        image: postgis/postgis:16-3.5
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.0
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        if: hashFiles('yarn.lock') != ''
        with:
          node-version-file: .node-version
          cache: "yarn"

      - name: Install packages
        run: |
          yarn install --frozen-lockfile

      - name: Update package lists
        run: |
          sudo rm /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update

      - name: Install file previewing tools
        if: "${{ inputs.want-pdf }}"
        run: |
          sudo apt-get install -y ghostscript poppler-utils imagemagick

      - name: Install postgres client
        shell: bash
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Setup test database
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
          RAILS_ENV: test
        run: |
          bundle exec rake db:create db:schema:load

      - name: Build assets
        env:
          UPLOADS_HOSTNAME: uploads.bops.localhost
          UPLOADS_BASE_URL: http://uploads.bops.localhost
        run: bundle exec rake assets:precompile

      - name: Run rspec specs
        if: ${{ inputs['test-runner'] == 'rspec' }}
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
          RAILS_ENV: test
          OTP_SECRET_ENCRYPTION_KEY: testtest
          SPEC_OPTS: >
            -f doc --force-color
            --exclude "${{ inputs.exclude }}"
            --pattern "${{ inputs.include }}"
            ${{ inputs.additional_spec_opts }}
        run: |
          if [ ${{ inputs['total-shards'] }} -gt 1 ]; then
            bundle exec parallel_rspec \
              --type rspec \
              --pattern "${{ inputs.include }}" \
              -n ${{ inputs['total-shards'] }} \
              --only-group ${{ inputs.shard }} \
              ${{ inputs.additional_spec_opts }}
          else
            bundle exec rake spec
          fi

      - name: Define artifact name
        if: ${{ failure() }}
        run: |
          echo ARTIFACT_NAME="$(echo "${{ inputs.name }}" | tr -d ' ":<>|/*?\')" >>$GITHUB_ENV

      - name: Save screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: selenium-screenshots-${{ env.ARTIFACT_NAME }}
          path: ${{ github.workspace }}/tmp/capybara/*.png
          retention-days: 7
          if-no-files-found: ignore

      - name: Save rails logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: rails-logs-${{ env.ARTIFACT_NAME }}
          path: ${{ github.workspace }}/log/test.log
          retention-days: 7
          if-no-files-found: ignore

      - name: Run cucumber specs
        if: ${{ inputs.test-runner == 'cucumber' }}
        env:
          CUCUMBER_FORMAT: pretty
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
          RAILS_ENV: test
          OTP_SECRET_ENCRYPTION_KEY: testtest
        run: |
          bundle exec cucumber

      - name: Expose GitHub Runtime for Docker build
        uses: crazy-max/ghaction-github-runtime@v3
        if: ${{ inputs.test-runner == 'docker' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ inputs.test-runner == 'docker' }}

      - name: Ensure ${{ inputs.dockerfile }} builds
        if: ${{ inputs.test-runner == 'docker' }}
        run: |
          DOCKER_BUILDKIT=1 docker buildx build \
            --cache-to type=gha,mode=max \
            -f ${{ inputs.dockerfile }} ${{ inputs.context }}
