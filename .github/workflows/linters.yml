---
name: Verify

on:
  workflow_call:
    inputs:
      bundler-audit:
        type: boolean
        default: false
      brakeman:
        type: boolean
        default: false
      rubocop:
        type: boolean
        default: false
      rome:
        type: boolean
        default: false
      language-versions:
        type: boolean
        default: false

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    env:
      BUNDLE_WITHOUT: development

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: yarn install

      - name: Check bundle for known CVEs
        if: ${{ inputs.bundler-audit == true }}
        run: |
          bundle exec bundler-audit

      - name: Analyse code for vulnerabilities
        if: ${{ inputs.brakeman == true }}
        run: |
          bundle exec brakeman

      - name: Analyse code for formatting
        if: ${{ inputs.rubocop == true }}
        run: |
          ${{ inputs.run-before-linters }}
          bundle exec rubocop

      - name: Run linters - Rome
        if: ${{ inputs.rome == true }}
        env:
          SECRET_KEY_BASE_DUMMY: 1
        run: |
          ${{ inputs.run-before-linters }}
          bundle exec rake rome

      - name: Ensure language versions match
        if: ${{ inputs.language-versions == true }}
        run: |
          NODE_VERSION=$(cat .node-version)
          if ! grep -q "^ARG NODE_MAJOR=$NODE_VERSION" Dockerfile; then
            echo "Dockerfile has wrong node: $(grep '^ARG NODE_MAJOR' Dockerfile)" >&2
            exit 1
          fi
          if ! grep -q "^ARG NODE_VERSION=$NODE_VERSION" Dockerfile.production; then
            echo "Dockerfile.production has wrong node: $(grep '^ARG NODE_VERSION' Dockerfile.production)" >&2
            exit 1
          fi

          RUBY_VERSION=$(cat .ruby-version)
          if ! grep -q "^FROM ruby:$RUBY_VERSION" Dockerfile; then
            echo "Dockerfile has wrong ruby: $(grep '^FROM ruby:' Dockerfile)" >&2
            exit 1
          fi
          if ! grep -q "^ARG RUBY_VERSION=$RUBY_VERSION" Dockerfile.production; then
            echo "Dockerfile.production has wrong ruby: $(grep '^ARG RUBY_VERSION' Dockerfile.production)" >&2
            exit 1
          fi
